{"version":3,"sources":["Todo.js","TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","todo","toggleTodo","class","type","checked","complete","onChange","id","name","TodoList","todos","map","LOCAL_STORAGE_KEY","App","useState","setTodos","todoNameRef","useRef","useEffect","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","newTodos","find","ref","onClick","e","current","value","prevTodos","uuidv4","filter","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAGe,SAASA,EAAT,GAAoC,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,WAIjC,OACI,8BACI,wBAAOC,MAAM,OAAb,UACI,uBAAOC,KAAK,WAAWC,QAASJ,EAAKK,SAAUC,SAN3D,WACIL,EAAWD,EAAKO,OAMXP,EAAKQ,UCRH,SAASC,EAAT,GAA0C,IAAtBC,EAAqB,EAArBA,MAAOT,EAAc,EAAdA,WACtC,OACIS,EAAMC,KAAI,SAAAX,GACN,OAAO,cAACD,EAAD,CAAMG,MAAM,OAAqBD,WAAYA,EAAYD,KAAMA,GAAvCA,EAAKO,O,YCD1CK,EAAoB,gBAiDXC,MA/Cf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOJ,EAAP,KAAcK,EAAd,KACMC,EAAcC,mBAgCpB,OA9BAC,qBAAU,WACR,IAAMC,EAAcC,KAAKC,MAAMC,aAAaC,QAAQX,IAChDO,GAAaJ,EAASI,KACzB,IAEHD,qBAAU,WACRI,aAAaE,QAAQZ,EAAmBQ,KAAKK,UAAUf,MACtD,CAACA,IAwBF,gCACE,oBAAIR,MAAM,OAAV,0BACA,cAACO,EAAD,CAAUC,MAAOA,EAAOT,WAxB5B,SAAoBM,GAClB,IAAMmB,EAAQ,YAAOhB,GACfV,EAAO0B,EAASC,MAAK,SAAA3B,GAAI,OAAIA,EAAKO,KAAOA,KAC/CP,EAAKK,UAAYL,EAAKK,SACtBU,EAASW,MAqBP,oBAAInB,GAAG,aAAP,6BACA,uBAAOL,MAAM,UAAU0B,IAAKZ,EAAab,KAAK,SAC5C,wBAASD,MAAM,UAAU2B,QApB/B,SAAuBC,GACrB,IAAMtB,EAAOQ,EAAYe,QAAQC,MACpB,KAATxB,IACJO,GAAS,SAAAkB,GACP,MAAM,GAAN,mBAAWA,GAAX,CAAsB,CAAC1B,GAAI2B,cAAU1B,KAAMA,EAAMH,UAAU,QAE7DW,EAAYe,QAAQC,MAAQ,OAcxB,iBACA,wBAAQ9B,MAAM,OAAO2B,QAZ3B,WACE,IAAMH,EAAWhB,EAAMyB,QAAO,SAAAnC,GAAI,OAAKA,EAAKK,YAC5CU,EAASW,IAUL,mBACA,sBAAKxB,MAAM,OAAX,cAAoBQ,EAAMyB,QAAO,SAAAnC,GAAI,OAAKA,EAAKK,YAAU+B,OAAzD,qBCrCOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c0401dbe.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nexport default function Todo({ todo, toggleTodo }){\r\n    function handleTodoClick() {\r\n        toggleTodo(todo.id)\r\n    }\r\n    return (\r\n        <div>\r\n            <label class=\"todo\">\r\n                <input type=\"checkbox\" checked={todo.complete} onChange={handleTodoClick}/>\r\n            {todo.name}\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport Todo from './Todo'\r\n\r\nexport default function TodoList({ todos, toggleTodo }) {\r\n    return (\r\n        todos.map(todo => {\r\n            return <Todo class=\"todo\" key={todo.id} toggleTodo={toggleTodo} todo={todo} />\r\n        })\r\n    )\r\n}","\nimport React, { useState, useRef, useEffect } from 'react'\nimport TodoList from './TodoList'\nimport { v4 as uuidv4 } from 'uuid';\n\nconst LOCAL_STORAGE_KEY = 'todoApp.todos'\n\nfunction App() {\n  const [todos, setTodos] = useState([])\n  const todoNameRef = useRef()\n\n  useEffect(() => {\n    const storedTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\n    if (storedTodos) setTodos(storedTodos)\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos))\n  }, [todos])\n\n  function toggleTodo(id) {\n    const newTodos = [...todos]\n    const todo = newTodos.find(todo => todo.id === id)\n    todo.complete = !todo.complete\n    setTodos(newTodos)\n  }\n\n  function handleAddTodo(e) {\n    const name = todoNameRef.current.value\n    if (name === '') return\n    setTodos(prevTodos => {\n      return [...prevTodos, {id: uuidv4(), name: name, complete: false}]\n    })\n    todoNameRef.current.value = null\n  }\n\n  function handleClearTodos() {\n    const newTodos = todos.filter(todo => !todo.complete)\n    setTodos(newTodos)\n  }\n\n  return (\n    <div >\n      <h2 class=\"todo\" >Things to do</h2>\n      <TodoList todos={todos} toggleTodo={toggleTodo} />\n      <h2 id=\"directions\" >Add to the list</h2>\n      <input class=\"todoBox\" ref={todoNameRef} type=\"text\" />\n        <button  class=\"button1\" onClick={handleAddTodo}>Add</button>\n        <button class=\"todo\" onClick={handleClearTodos}>Clear</button>\n        <div class=\"todo\"> {todos.filter(todo => !todo.complete).length} left to do</div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}